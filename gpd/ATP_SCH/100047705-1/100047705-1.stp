NOTE "CREATOR" "Designer Version: 9.0.0.15";
NOTE "CAPTURE" "9.0.0.15";
NOTE "DEVICE" "A3P060";
NOTE "PACKAGE" "A3P060-fg144";
NOTE "DATE" "Fri 2011-03-25 12:47:50 Pacific Daylight Time";
NOTE "STAPL_VERSION" "JESD71";
NOTE "VENDOR" "Actel Corporation";
NOTE "IDCODE" "039121CF";
NOTE "IDMASK" "06FFFFFF";
NOTE "DESIGN" "dtr3cpld";
NOTE "DESIGN_DIRECTORY" "C:\Actel\projects\PWR_DTR-110510\designer\impl1\";
NOTE "CHECKSUM" "79E5";
NOTE "SECURITY" "Disable";
NOTE "ALG_VERSION" "20";
NOTE "MAP_VERSION" "1";
NOTE "TOOL_VERSION" "1";
NOTE "MAX_FREQ" "10000000";
NOTE "SILSIG" "00000000";
NOTE "TRACKING_SAR" "76713";
NOTE "SPEED_GRAD" "STD";
NOTE "TEMP_GRAD" "COM";

ACTION PROGRAM = 
       VERIFY_IDCODE,
       SET_PRG_ARRAY,
       W_INITIALIZE,
       DO_ERASE,
       DO_PROGRAM,
       DO_VERIFY_BOL,
       DO_PROGRAM_RLOCK,
       DO_VERIFY_PGM_RLOCK,
       DO_EXIT;
ACTION PROGRAM_ARRAY = 
       VERIFY_IDCODE,
       SET_PRG_ARRAY,
       AW_INITIALIZE,
       DO_ERASE_ARRAY,
       DO_PROGRAM,
       DO_VERIFY_BOL,
       DO_PROGRAM_RLOCK,
       DO_VERIFY_PGM_RLOCK,
       DO_EXIT;
ACTION ERASE_ARRAY = 
       VERIFY_IDCODE,
       AW_INITIALIZE,
       DO_ERASE_ARRAY_ONLY,
       DO_EXIT;
ACTION ERASE = 
       VERIFY_IDCODE,
       W_INITIALIZE,
       DO_ERASE_ONLY,
       DO_EXIT;
ACTION ERASE_ALL = 
       VERIFY_IDCODE,
       INITIALIZE,
       DO_ERASE_ALL,
       DO_EXIT;
ACTION VERIFY = 
       VERIFY_IDCODE,
       R_INITIALIZE,
       DO_VERIFY_EOL,
       DO_VERIFY_RLOCK,
       DO_EXIT;
ACTION VERIFY_ARRAY = 
       VERIFY_IDCODE,
       AR_INITIALIZE,
       DO_VERIFY_EOL,
       DO_VERIFY_RLOCK,
       DO_EXIT;
ACTION READ_IDCODE = 
       DO_READ_IDCODE;
ACTION VERIFY_DEVICE_INFO = 
       VERIFY_IDCODE,
       READ_INITIALIZE,
       READ_IDCODE_ONLY,
       DO_VERIFY_DEVICE_INFO,
       DO_EXIT;
ACTION DEVICE_INFO = 
       VERIFY_IDCODE,
       READ_INITIALIZE,
       READ_IDCODE_ONLY,
       DO_DEVICE_INFO,
       DO_QUERY_SECURITY,
       DO_EXIT;



DATA CONSTBLOCK;
    INTEGER IEEE1532=0;
    INTEGER STAPL=1;
    INTEGER DIRECTC=2;
    INTEGER PDB=3;
    INTEGER SVF=4;
    INTEGER FP=0;
    INTEGER FPLITE=1;
    INTEGER FP3=2;
    INTEGER SCULPTW=3;
    INTEGER BPW=4;
    INTEGER DIRECTCP=5;
    INTEGER STP=6;
    INTEGER FP4=7;
    INTEGER FP33=0;
    INTEGER FP34=1;
    INTEGER FP40=2;
    INTEGER FP41=3;
    INTEGER FP42=4;
    INTEGER FP50=5;
    INTEGER FP51=6;
    INTEGER FP60=7;
    INTEGER FP61=8;
    INTEGER FP62=9;
    INTEGER FP84=11;
    INTEGER FP85=12;
    INTEGER FP86=13;
    INTEGER FP90=14;
    INTEGER UNKNOWN=127;
    INTEGER UNSPECIFIED=0;
    INTEGER QN132=1;
    INTEGER VQ100=2;
    INTEGER TQ144=3;
    INTEGER PQ208=4;
    INTEGER FG144=5;
    INTEGER FG256=6;
    INTEGER FG484=7;
    INTEGER FG676=8;
    INTEGER FG896=9;
    INTEGER QN108=10;
    INTEGER QN180=11;
    INTEGER TQ100=12;
    INTEGER CQ208=13;
    INTEGER FG1152=14;
    INTEGER BG456=15;
    INTEGER UNDEFINED=63;
    INTEGER GRADE_UNSPEC=0;
    INTEGER GRADE_1=1;
    INTEGER GRADE_2=2;
    INTEGER GRADE_3=3;
    INTEGER GRADE_F=4;
    INTEGER GRADE_STD=5;
    INTEGER GRADE_4=6;
    INTEGER GRADE_UNDEF=7;
ENDDATA;

DATA PARAMETERS;
    INTEGER FREQ =4;
ENDDATA;

DATA GV;
    INTEGER ULOPT1_BITLOCATION =11;
    INTEGER ULOPT0_BITLOCATION =10;
    INTEGER ULUWE_BITLOCATION =9;
    INTEGER ULARE_BITLOCATION =8;
    INTEGER ULUPC_BITLOCATION =7;
    INTEGER ULUFE_BITLOCATION =6;
    INTEGER ULUFP_BITLOCATION =5;
    INTEGER ULUFJ_BITLOCATION =4;
    INTEGER ULFLR_BITLOCATION =3;
    INTEGER ULULR_BITLOCATION =2;
    INTEGER ULAWE_BITLOCATION =1;
    INTEGER ULARD_BITLOCATION =0;
    BOOLEAN BUFF128[128];
    BOOLEAN BUFF32[32];
    INTEGER I;
    INTEGER J;
    INTEGER TEMP;
    INTEGER SDNUMBER;
    INTEGER ROWNUMBER;
    INTEGER DATAINDEX =0;
    INTEGER FROMROWNUMBER =1;
    INTEGER AESBLOCK;
    BOOLEAN ID[32];
    BOOLEAN PASS = 1;
    BOOLEAN FADDR[3];
    INTEGER STATUS =0;
    BOOLEAN SILSIG[32] = $00000000;
    BOOLEAN ISC_CONFIG_RESULT[18];
    BOOLEAN VERIFYEOL[2];
    BOOLEAN COMBERASESELECT[23];
    BOOLEAN SECKEY_OK = 1;
    BOOLEAN SECREG[44];
    BOOLEAN ULUWE = 0;
    BOOLEAN ULARE = 0;
    BOOLEAN ULUPC = 0;
    BOOLEAN ULUFE = 0;
    BOOLEAN ULUFP = 0;
    BOOLEAN ULUFJ = 0;
    BOOLEAN ULFLR = 0;
    BOOLEAN ULULR = 0;
    BOOLEAN ULAWE = 0;
    BOOLEAN ULARD = 0;
    BOOLEAN ULOPT[2];
    BOOLEAN SUROWCHECKSUM[16];
    INTEGER SUROWCYCLECOUNT =0;
    INTEGER ACT_UROW_CYCLE_COUNT =0;
    BOOLEAN ACT_UROW_DESIGN_NAME[70] = $0102265d3e6c61cd93;
    BOOLEAN SUROWDESIGNNAME[70];
    BOOLEAN SUROWPROGMETHOD[3];
    BOOLEAN ACT_UROW_ALGO_VERSION[7] = $14;
    BOOLEAN SUROWALGOVERSION[7];
    BOOLEAN SUROW_PKG_TYPE[6];
    BOOLEAN ACT_UROW_SW_VERSION[7];
    BOOLEAN SUROW_SW_VERSION[7];
    INTEGER PLAYERVERSIONVARIABLE =0;
    INTEGER SCULPTORMAJORBASE =4;
    INTEGER SCULPTORMINORBASE =50;
    INTEGER PLAYER_VERSION_VARIABLE =0;
    INTEGER SCULPTOR_MAJOR_BASE =4;
    INTEGER SCULPTOR_MINOR_BASE =50;
    BOOLEAN ACT_UROW_PROGRAM_SW[4] = $2;
    BOOLEAN SUROWPROGRAMSW[4];
    BOOLEAN SUROW_SPEED_GRADE[3];
    BOOLEAN SUROW_SRAM_DISTURB[1];
    BOOLEAN ISERASEONLY = 0;
    BOOLEAN ISRESTOREDESIGN = 0;
    BOOLEAN FLAGDISPLAYCYC = 1;
    BOOLEAN ISPRGARRAY = 0;
    BOOLEAN BSRPATTERN[372] = $9249249249249249249249249249249249249249249249249
        24924924924924924924924924924924924924924924;
    BOOLEAN SAMPLEMASK[372] = $0000000000000000000000000000000000000000000000000
        00000000000000000000000000000000000000000000;
    BOOLEAN BSR[372];
    BOOLEAN SAMPLE_DEVICE[372];
    BOOLEAN RLOCK[416] = $7fffffcffffffbfffffeffffffbfffffefffffffffffffffffffff
        ffffffffffffffffffffffffffffffffffffffffffffffffff;
    BOOLEAN ARRAYRONLY = 1;
    BOOLEAN CHKARRAY = 0;
    BOOLEAN FROMRONLY = 1;
    BOOLEAN CHKFROM = 0;
    BOOLEAN CHKNVM = 0;
    BOOLEAN CHKSEC = 1;
    BOOLEAN PERMLOCK = 0;
    INTEGER HEX[16] = 70,69,68,67,66,65,57,56,55,54,53,52,51,50,49,48;
    INTEGER NUMBEROFFROMROWS =8;
    BOOLEAN INITIALIZE_DATA[5] = $00;
    INTEGER SDTILE;
    INTEGER NUMBEROFSDTILES =2;
    INTEGER NUMBEROFMAPROWS =1244;
    INTEGER IDREV;
    INTEGER IDFAB;
    INTEGER BM7DEVICE =0;
    INTEGER BM1DEVICE =0;
    BOOLEAN M1BUFF[128] = $acdd6548ccb488863e291eb18fe95077;
    BOOLEAN M7BUFF[128] = $e137623a2eeee91126015f3f73664945;
    BOOLEAN IDCODEVALUE[32] = $039121cf;
    BOOLEAN IDMASK[32] = $06ffffff;
    INTEGER SECKEYCHK =0;
    INTEGER DESIGNPKGTYPE =5;
    BOOLEAN ACT_UROW_PROG_METHOD[3] = $1;
    INTEGER LABEL_SEPARATOR =0;
    INTEGER ROWITERATION =100;
    INTEGER PAGEITERATION =100;
    INTEGER PERCENT_UPDATE;
    INTEGER DIFFERENCE;
    INTEGER UNIQUEEXITCODE =0;
ENDDATA;

DATA BITSTREAM;
    BOOLEAN UROW[128];
    BOOLEAN UROW_MASK[128] = $fffffffffffffffffffffffffe01ffc0;
    BOOLEAN DATASTREAM[517504] = @moF00000110040W0W000020G000400108002200000WwCq
        caam0000Zz@lF999Ij9fIo0000U@x@@IYaad499H000W@_@@FHIIoHIIIY000Wy@@VRaaa83
        000Gaa89na4990m050aaa4WaaKq5000Z49914999WQO0IIIIGIIIrW0aaaa20000200C02Wa
        aaC13Io1Tv00000IIIIgX2QRRRP99BnXaa4b000WssMjPIIa4B9HIU000WRpss89IIo59997
        000mgX1IIIIa1000iaa49dqciTQRssPRsqk9HIIEPRRpcjjjdjjjT9999kjjjvsssgpsscTI
        IYaSRxQW0RjjjQ30000i9HIGW499a0W000000Qaaa0GIG2Cd6WaaaCqK0IIIIeT0000WAm00
        IIIa00000991I408m8e79e6UWa80GDWW2IIIC999IG006W28f91Yaa4610080000baaaOIII
        Io3Waaa8IIIg98Wsss6qijDNIII4h@@zljjPxiRpsca499OV@@psijDiPRRLYaa4t@@@DRRR
        JrsssC999Hy@@x3jjLRzlzkX0xdjjQtssiT@sgjNRps69hssURssMRsssjPRRpPRRRdjjjfi
        jjD@sssCsssi7000W00PUXG3gW1m2z73QA4C0c0100m0uYQm52000g1nC04APgGJuZ2o2f16
        o9TaWe9g4JDWcW6L70k0400GEnGr0Y4D8HsoBG0W0I3u8N3XeX6Y198dOZBK4IG4QQeW10A0
        I00C0mIl03BXGaJCorH6p0KqUOGWsAN16CQW1908WCW40881iWS1980WY36AO8e40XQ064W0
        0K2e00H2X4aI0101K3O1IIIIaaaaG999HGIIYi4a49A98I2IIaaba89HIabaa819Hf6m0999
        9KIII4aaa8399H2aaKQm2r09a6GZL044eXhW6JiEnYQ04aqmYWJJLdvX1068G0081XB8118p
        MGWWaaWI540GIKYaa0KfY2W801HIIIYWeWKsY3GWIIcjm00a09r088rX20G993Qa0a4a4899
        AIIG2aaaa1909f6m1Waa42QSJLG30999HA008J21O0000HIIsqyWQ0NypOYi4AK3W2999960
        000aaa87000WIIYa0000W99II40g1WHnn3C999H1000eaa4910WZZ4q9WWad6K3uYG060aaa
        4500mj0280000899H600GW12g1eHnA2aaa40000gNW18IIIg1un00hByGp0W6IUUHqWe60Gp
        YjCQoiHQ052ETI2s42DuX800W0d@dKfjm9r5Q0O3000bUSHD064EHLnlSGeEU899B9l86Waa
        aaZ32r0yGUHA4Uq6r0WHuHibY57XJ4Rf2A8199Be18oMeXQ0I8eXN818Pr7P2j54JuH@7Uq@
        nmKN0DfzndBDcOGdQP4Mv@X7zVuHt7E1I4000QbOb@NC8yeJA@BXmZ2ES2ZRDAZi5s8e1LII
        IXs2kHsssc1000GRRRs20000jjPR7000Gscjj3WQ0aW100GD04msss6IIIYSRRR6999IejjP
        Baa89nscjTIYaamsQ0aWQRRRD04ORRRp9999ejjDxaaa8rssU2u0c999ISRRh1WY1180000W
        JIII80000999HA00iK4120000baa8H00e6WBam@@xV89HIo@Vhu4GY@@t@ca49X@V@@JIaaa
        @h1e2VaaaD6HWQRRxIj9uz03msssg0000KRRhM10WQ0kGB00GeHEtQ4YXWyNWji5Uq@jIeRd
        0Hj2A4H34Hv0GKTGPXJaPhHP4gJD0999JIwYGGeASYo67iXagXeJ07_xaXmZmAeXBiaaa4q0
        4r2IGZZBa6m7v4CIFfK4Uq54000ajjjP800e602G000Wsssc700GuHUWsss6IIIY8RRR6999
        ICjjh1W0YijjX7vXijjDdaaamqssiBIIY4PRh6024QRRpW999y8I0QII_L41z7O0ecaamZ2X
        i@@lF89fQ0E0u@@lFGIomZ2XO0000QRxQ0EGL000eqssmZkT00F0204KUXBtCGGe0T4Uqah4
        eG66KqOY5f1GGD064sz5X79Of2BbyoAz3tm00fiU_9H3SHr1ea6W9ZLSIf2ga8m9X7bon2LK
        GG5ps0HeE05En19BFHuHwakn9ZzSGuHO889BHIIYYiaaWGTOGKIIImZ70Xab4119PuHL8B99
        8PP3Iu929B91I2Io2UKqW9YfWWDUMeWTaK8y8doBoXGgC9DW209H9bwm31SgHJ69yYG1pI@G
        R1LG00mcjjD0G00wW7l0W00TD04010eLRRxIuHDefjDAy82ajjG6UK2V5PWORRxmZ8GRJRBC
        9992jbjwWaa8nsqgjJ2YaGRPuH9GJIoDy83yjjjvaaa4ssqcTI2IaORPZ9b0JI0WmZWWca4G
        uH6W000mD99PD06yL41IIII2FY0IQI2_l@@3Fo1199yX7PWz@@V0IIIa@l@h1W0z@@@C9D91
        z@@xZaW4908GuHCG00OpqsMGmZD0G00i295080GPRQRPOYLY8XXgGY8@5P2jkvENY8y8f2R1
        XDCCOSW6oaHY6Jgu9W2gU3jmZiRr662UKeb0qehbEommaWwEfQW6g10XVpX933jg8GXW79fW
        WawJQZ_5Qeuh32ITfw7@vo662USXYYI83m42j_8O999X7TIR5K42IKPCSJer66UqBXZpI11F
        CUa3v4GX0400PRRRc0000jjjRB02m0qscfT00m0RRsoE0010PN@8120QR3F2XGhJGs899IIj
        DxRaq891sWDjG2aW4po6s9IIKYmZCGkjfzNH4ejXj5c4a4rsosmZ8WsqscH2IJ0RPJX7L0sm
        c9UYIkwRPZ8999ORJRp9989ejbjQ0AGPRZ4f99JjljHX6K01E9fmZMGJQIY0W02G9Df1FIGu
        H8mII1000a4f990020Kaqa4uV@z7U41U@@F3FY0_pl82IIuz_pV8198n@l@VuHBu_@DH2I2j
        @_@391992G01KRRJ7UK1sok08m0e5U4101kjPJh4020gj295010iPJRB8qw54000igME30CN
        eCYK4H4xk51800Wntc8D0Bw4OXq0U8uns2B0a6Je8D09gS1bH8U8unaW001awG6Xxz2W00WP
        GA8J6Aw4e08G00XMJKu4T0810eo1PI3WWMM_Pi3D0100KMm3H4XGg3Qa6W4bBII6JLa6W4L7
        OIJ0E4QTcvHSX000WQ0Y0400IeEbGG2Ig0738181HGIoA7d8889A5g33L8HWqaaWq0EWWa4K
        eE9aaq2qa4bg10XGhLxBWFw4WbPa4fj0QG1004yeCPBe0919eyYiWGIII8LGWeab4P89PQ0M
        mIoIYaaeGuHDaIi9Vki0248RsMs0X7T024WMjTj30068rs6sLTT3XMRGuH88iiHYYiahMst8
        IGI2QBxQ1991HijDKdac89ijjghHmaaaWqssM0IIIKPRR3jk0oss9IJIePTJxqQ41I3Ra889
        vgbbDZaaaOrrDCca1oljj3Fo00SIQq41W0089PII18uH52FgWghXGG00Ger58@_X4119lF@@
        JaWa4_V@_3Ua0V@yFII2I2jEXmZ8m_@@FJIIIm_@@XMN044eMTDj0X7P00CG0ijjiA00O0rs
        s4y82LNd0_sssmZOO00R_bvX3WlA6ZQYd7jmZOR0sMQCvWq0ce602Ew9ZGh5SV0DQrZdmZQP
        QXHUiuZzmA9q0Lw6GXQ0KeWRQI30Y22YuaWB2hac0DainW92d0Zf4A8OhAo98XU0OeMW32d8
        cYYEGGIIG6WJ4yuAfGcGWWQqwAQJBGHSSK43pG1FMcIIIIuaaa1F6JD080IIKYai4KD04Wi4
        99unLo9G41004ossM2UiWGhFm_E000XjDRJ7IX7LWXC0WghL8un4iCIIYiKRRbe2mss_6QT1
        ifJIa44s6Ua1IRRZ8999eajj5aaa4LossmZAWjjDYaa4uMZCWjjDzBI5OBpa49BC9RRx0899
        4ajjT0aaaIsss6QJIoOI7qQK1a6102UC1III0XMRGuHG8j99f602i999m@@V7aaaGerAGaaa
        4y@@dFIIIaSx@X7LW_@@pQ0CW1899u@@VV0aa81000HjjPJ10ere24000WjjjK100Oer4090
        0GjjjDX00WQ080I000cqsM5900WIRR3FYdB3tAwmFsU9aJ2cG100Gj1uCSG59yO0G0GWsEiO
        5XMs2e5G00WXy6JQ0BKV28DIUnH1ZKXG10420oafXuGRfwQdK000rIp4F0GGmZlKhpGV3012
        00WGhdOEW3G010KTm6zFenMmmq901f1SnR3DKEm4fGDHpC6DF021F_d000eaOr8CC5wj0YmZ
        Yf0742jc0Weaa5KVGuHUK3G4X7LW699fE1G0IIIMuHjW8008e1Eo82cm0o8r1Cs5rWt0Musj
        I2WMYGgO8qwd81P9HIQKAye94aaa5Ek888B9JIo2GIIMX7zGb16au313bfGR1LWG8mcljE0m
        GOQsosK0G0OGRPxn0004ajlDw00WW7B8y830200Ysssc300GuH58jrHYWWbh6cc8IKI0QBB7
        19B8Ijjj1daaKuH5OIIoLQRR41995DijDWaaa0MssgIIIY4RBBcE98G2jr23da99eswbXHAy
        82CbPIWa6tEuH30RRp8899brjjrGa6m9D9H20800E98IZ00W0aa2Ua0GaacCD0GGGKI4Uq30
        200aqaa80000MQIYK_FFl39BIG_ljEda099_t@FRYWW0UVFdFIMIIyx@@NTD1o@@BHIIIut@
        @Z9899u@@VN4aa80000HjbP310013s6jj30022RcsY200YHPBRJzv938W000nssEuH2msssg
        0100KJRRuHXiNn5HiJpcrerJ01D1e0400WD0IGW00Gv5P8020ekoA27eZE1ce6X32rffD1Ce
        143o9uWdbO8R04kyvWS2a8D06gFvWq02P_e72Uil22QOa992US7W00WxDjHXfGi6W1D0Km06
        eiGk6jwvKQ0HCKG2rETLS2Eajm2W020gduX22gO6X2G0W0qPH4FNO0220WyRg0440m00BO00
        0e21IsQW18040XJan31A4QW1BF41W00WM9m0410Gl8d4gZ2IGoIo0qXi6H0199PEE40P99GM
        I2caaaWGTmeww5a891r901GjH9xJY0D9991Fko924C6wBT2K1A000G001p@Q1010WZ1Gupa4
        c2WWHqE9DW280804eXE1DymI1F4Uq7aajaALO1BIIIr0e0YIIomZO0IGIYai4bqEB0O998IK
        IIb4aa9MXGQ078199J2IJ2bba439991DKW04000001X9dHE1449242W04ajlDP2G04qssci0
        G00GRPss1G00ijPxx0000WTer4W0ejDuH22Fg1JZaW48r6iaHIWW5OJMs29MIICRRVd89D92
        jM1IIIAQRRR2FY0RBRbX7L0o698I2ibARdaC9fswjjHYaaahcsqCIGI2XMdWPIIGaQRBX7XG
        e14m00EHGIY0W00C99jf1FI0DD9WW7jGIIIIuH4GIQIX@vPF8P99o@vT_aaK0n@@xVH22am@
        jx@89IIo@X7PW@t@oW7BmVca49b@V@VHI4a00002rgij50GG2esqcE1080ORQRL0800gjj5h
        00Ger74Uq20W0e2jsdqQEvmwegsUaCCAfQZ380000814edREk1GYwES8unWILWbe2su90381
        004u47rdKHQ074yOATHoGuHmz1W2DCKHW198W008qQRE4@ccf99336A80Xq0a8RXBg1W0010
        0024060O2C000@9WHQ044RH6f1OHBdj4mfANW4HwJoie@A72Wmn1708088SYBwH8XB6G0W00
        0G0WW66SOUW5oMWWx7c81X5ITGXA5A8Hn5gOW1aa0aA989XIMMgWaaCy842jc1ebbarFQG5I
        60aiaCye4abb58111Bqw90MMIY04aCqQng18Z2nQOHfKMYPc66Sei26Q3jYL0AekXA2FY3Wa
        aa0999R5laQ0O089982IGIWb44r0K0199hW7V89f34Waa4ye39LCHe1O02Kmkr82Qh_0OGRR
        ss100CajzxJ11FIGrrB4Qj26699HGkjPBZa49DqcbD4I4aWO1FMGuHCWc4QBqQ2WaQRJsE99
        qQ2Ks99GAej5Rva49DrMbDCI32GWDEJIaWusX7XGrr5ebjHQG02yjHI6Q01Guaa8D200GGIg
        r838Df10G0YYaaqOuHLW0ea4D9yltl6IaaWy_xFFRDg0dRI2a0_@yhF9HIG_Fy842jk0@_l9
        LNJWz@892I20XMV001iDRJ70W05sQDY001rsijL02F2XGh98y84gGYWmZaA5bDo_0X6C_OR5
        AUTpXjZye824QQ4axKeuJbAg3Y2G002feKGg16CdY1TsGnRBWCzn5H4q0G01WLDXH0W0GxXx
        4SIAF5KGBGMK0ADXMN24W0Wytg8qWH6e0XGhPPeHD6UmZ7Z0fP6Yk4xdK7su5XP2D0eD3S8q
        wdgImYm9w877N2jk619f95uG0898fsSE0P19PuHBK@e3XwaWJIIIWacaLx0HOoL4UKKvRqGW
        wqC5GI0X00QexaP1OuiWC2US38991vXt0191nymNWWabK5IXKL511DW1f99XFDA8qW34100i
        HG2X6a1W000G882mqskCGW83QvR3M0a42eDDBx040GoN2UiWmZK0W00GuHAmqME622IWOvR2
        2P9DKiD88BaW2FnNYyTIcWWmMijDIX7P0f99XmZ8089fcbjjJaaa4MMcGSIGG2R3AnE919Qi
        b4RZaaE9ccq1PIoa0tEye6mss81IIoLTRRKu46uaackr82qaasqQ41qqc4001GHQRIi602qa
        a84UK3W00e8D99uz_k7aaW0vzR7V2IQ0uVFDl911GuVMUza009vV@@Fa099vz_@VYaaamV_@
        VuH4uz@@G2II28063rsto48GWHOARZC0641ijDIB0M08LcebL0400r6Uq4stsMguAcERkvAF
        IkbvcW7n8f02cmYWW3mOsb6W020KG01n6S0800mm9ie1L8cmBZqDoeG032KGbv4AuBW2o7e1
        2800XxHIQ07yDW1XMpGbBAbN4FjIGJJ474WW1j8RGq0aKXW1ntOG22RKROCJOaJ115icC3fy
        amtBWKI45vPuGH0C4dDETS0Jq0SqS82x1eI@bOW008OG7OIgm60I001fgIO28K3m3x5iGeEM
        0MIIYaeaHuH704baChH7on11mIYIiaaW2rn04aaiA999WIMIsYC1jvW0IpIoaaKWW4a49939
        oIYIaWaW2FoXtaB8NA82D8ZMQ8e6W3kDWWiJDPDY30800020We82K0880KPs5hf7Hd0CKIG6
        H3i0100Wz6EuR342FIc66CG2IIIkKAeaaaCl89mIMIYa48HGIIYaaCbQ08WiabGQ0EGGIIAD
        03e9P9HIIK2aa4KQ06q_U3lRym924qtN40000031WPBRRp1G00ejjDR0G00W_sijYX0O0Jps
        s00G0ORsss1XMNWD00emZ8W20400RRRsOOAM0H9G2kiOBna09Dr7jjKIWcoOKs661IG8mMcs
        Eye2ajHIYaaQpcs29JIICRBRZ8899iiaLgaaa0q6sc6QGIcQARME99HQDC13nW298kDBRham
        Z8GQha459rMjiTIaaaQLcs6HIOI0400fJJQUE4W0e8f9PF010Waa4fD0100IIaqD0X7L0600
        0maac87000GIIga6000099QIwPz@W4811wvU@QY4a0o@UVgIII2yvCFI9991s@@xV91HIs@l
        z@a419rV_@@IaaayxU@VGI2I6G024rqss48A01QQRZM0008kiDR2C615rcijL02Fw060QRcs
        M0000kPRR30050bjDjbUuWg6WCoseWqqe9cWQUhPbCdN88rKI3WYWwAX000HHVp0800yCW78
        400SKp70Y00I3uXBAJ80QB2FY740W0j9OGB7AqC3Ap2mGQ0NScW11dKoL@C80000900GQDaS
        xZ7z0OGI0Ti1Z6l1eHE1BajW90200g1WWB8EuSW7gsnY2na1400G33C4fn7nAHnY3I4QW7lF
        OHdqFy1m1V4KnT8W4Vs1L3CHI5OG00088r2QKeWS7aOS05o1eXwWaG000GH254y86IImIQpP
        14eaav7JWCaa4BIII1FY0aaaiGhfeQ75e9915g31C9HI2UCAG001djdnw2UaKn1NXwnbLCCL
        H3xjOIM9VaxG4XKLG91G4FG2X7jXWaa0999O1SU0199BGoIaPB4HUH44ye1IGIIaaae81898
        qQ2gvqWGhb8eX8A88XGhp8qW709C0PpUQp1jCWe5wCR0y20YMWij2O201@Hts1020OxmZ8e2
        932Ui0AWY0J7I0pSQ3801fY5Qi9a9e8WM0cbGcWa4@8to8PMI2RXos8GJIY5BRR49891jbjj
        Wqqa8sqqgH32Y4BGeMAf1Igj0O3ba89ysWibJ2qaGZmq6CIIIXMU_sKIII2RBRpA9D9ojzjm
        ZAGHPR4989XMZCm3040OQJJy30408fDHQ3000Wac9D3WW0u4DD93000Oqqaa3010GIQIIuH5
        WaaUppVB9GIYUIpFl088Xz3v@g4Wa0@lzlMI1IWzEl_NIGWazVx@V15II@dk@l4199Vkk@7a
        aaa1oO04jWjD0QH05cGqS1uD0YRIos0W40Jb8Op5Wt3AW01100RJxY998y82020G5QD23JW0
        WW0WDJQ8jcC2jWWstRg60C4aW0qxG17n0oV6Fa1m252SGm16iKs60q00_l81X980PsmG_AF4
        dD4pUKHD07yuqHX6emG78CBW6DEYGe144S2ArFopXCNKOf9ZJOGxJYaJ02F48HbBR0G08ewW
        EU78ZB9keIQV80W0a187PBKn_0Ai7G1WW02Mu0ZE1oOFcDMCWZ@6ouG35_3e110015GbHh4j
        Cdn7rSeGBW8a7n898mWW00Wb3W82X9QbmXAolPeW4wnc20100AB9B24S13GWI5uKWyaa49II
        GvuG0GIIoSSAWiaeKzZ88XoIYbXW41H9fsSSGUIII5I4qdq21FQ0899hGTCG100GR1JCV011
        QW1G00eQ0g8JX3g18YE6QOTYBIfzYhGw8oMC4010il061DmnGR94yu9IGIKoM0X0EB8Fy4GG
        GIcN45f1G0aa459891XZh2811WCD9etc3a000aPM6nAe044Wa598WW5400C00Im220040088
        1jb01r0i19810010G4WW0ExZ0qW0002001QG20010e60D0C0C9RRRo040CejzDP1020Wscij
        30208RJstX0000RsssW000eTRRRXG000fjjDZA00GossipcsC9IGY0OJt6298IKi5JBBa889
        nibzTYabqWbijDaaa4vLssC2IIaGORpMW9HIgeDRxC499n6iDaJWaWOJcM_HIII2RBRR8D9D
        YjjDPcaa8nviLR7q49XmMjjJQaaKPqsse1IIo5ORR4199XuiBWa8m0W899IQ3G0WWaoke0G9
        f9I4400mfFHI4100Wa6995XuiD0000b9991@_@iWaaa8@y@OJII20@UlzD99I2@U_lda099N
        x@@X0899d@@@J4aa46x@@PIII2Mz@t7899I020CKxRsM0008Wj9Rw0224m6zDj0020KscMMX
        G00Wsqsc08000PQRsn800WfjPRH400eqEEx4UKHZrHQeNRKY2GaWWQOM3DEtzWGGi8buFMuW
        XHzSW200GF58yHp69ZvGAQL4DW3T5JY0W0W10e9Me4820041Z133emBCE4pT29PGGQ0Jq2W1
        f1umwB9C401r5OHrraGW008ExLcGOYCc_WG0GGE1W4RW3WW00gH0YX0G8qWH0101ir06JJSG
        VynyVn2v4uGYLoSGm1P18I6J7aro2fRWGUh8bgW1fFrm43D4DmAXSaGcCKC6y1VTbIheDa30
        51EGHA05adH2nPAHtGMqM03C004o@o4acaa899112IIYWaW4P19PwW70B899Xd3WGIGYWbaC
        X74IIo0aaaqvJo0QKIIa4a689B99IYae99B9IIdg1GYg0m8PR2_wIaw6s8D0BUGbY_auOpkG
        YpM6899A9ALGIIEWcaaC9fBI3GXCqRWWaaOD04O99Hf603wUu0IIIMaba4gJjYs24Hstsd18
        08GRQxq2O0O0jiPO7G08Gscji3000G_X7PWQRRBS0008ijjvC004U41idjlXaaa8sqsbH2I2
        4RPRm2P9YIifPPda8P9yKRRZ4999FijjHX7P0G999Yijjwiaa8ncsAjJQYaOBh6s99IIYDQB
        Ra099ngijDZaaaeXjjDdcaaX7HWcaaKYsssGGIIa3RRF801HIQGA448999f7R2C9D94U418D
        H0000dA99H0000YcaaK0000IJII2Fw0@@@@W4aa8@_@wJIIY4@ylyD1922@@__da819@x@@X
        0999d@@@JWaa46@@@PGII2c@@Fy82wnc0eji08080rsMt1O0C0RQxg2004GjlDQ5400G5jPR
        13000gcjjZZmZAGn00GuHBK6K4J0zG1gUys3B@e_Izloa6D3FnJGqmEaUx5J3uGQ0F4ai6rQ
        Cpe1rCWpA55DI22Pa6W3fFqGgGNqZDArFUIXx4H0008I03IUva1gev0X3_5uYX4O8302A6e2
        WG00119pCOSis12T30HGGVCz13A000czGd4I5wS26w4WZ3DmOQdBMJ8XTpYe604QFR22001B
        3aHTGn4dj8Waia091ALWJ1YIIIonXWQ08moIIGEED4dz3eB99ZAK2BB9122Iog1G1QII2X7v
        3808WK72PFhbQ@ubDHf8V5DI30bA9C8R16GKIIc2v7HVQGQ0Mawm1nPFI66JKcf4bBOWijjD
        J000Wsssi500y4D1C0000RRRpEG000OThs6W000jhQRBm02WqXjjDm020fmssEssssGIIIaQ
        RRp899H2ijDRXa49fssijJIaa4MhbjHcaaahrss82IIAwORR0H991DifLbea49qsMjDIIa4O
        RrsE9HIIjLRRp4999t11CmcsscJIQIG3RRc999HgXDPBaa09vociTIoW7J8ye2QDY0D999j6
        H0999nmZAma80GD088f99H0000iqa4fu@@_7IIaay@x@F9HIIyl@@N4999y_@@Faaaaux@@7
        4aW4vt@VNIIIauplzd98HIvvt@N44998000GjQRR10000gjjjJ0000qssM5000WRRRrA8010
        QOZs2G00GiCRR7O010Mejj5O00WoqssoFHgC0mMH3ipyoDak1AjEMnU0NG000e6W60KW04Ua
        CB7bLc2JiNP11duY040WqQs1101Gh2J8000ebX3G100yCzCPoyJoBwSyJHDD5JD0JyoI4DIG
        3W0WW__2Q00JG1004flOJDKJS2Pao5DDegmREJ4EHAPPKG1EPaZ352G2I2rv0baWaf1SHmZH
        5RHLxN9J6JXS5W3r0Gm696a@bA1FYHG3f08999eX30IIIM@O5PeNGuHgKqA6b7GW008WmZaW
        300GuH40040GsMsc14WWQ0808010QxRRE0a0WiDj3FY2YjjjX7H0BBPR89B9J6TWc_qMGHQI
        4BJOr9805Uq6ss_sSIII2QQJpE198IjCbR18GkiaDZqicmZu0G0Sgqc4XQ0C0800Ger4G00W
        YaqaGuHQu@R@744W4vxV@Q08mpV@FJIQImpR@_891N5WWmZm020KhcsM02G0WZ8G000WDBRR
        14Y0eCzfjq5Y8rHOGbreC00FBIo2800eqDc110GG304CDW1HJSGW7ca6W5XjmKP07CjW1LJ1
        KWj7bQN57ZmGmZt4V5Dj5aoL58aWm9TlHn@ony1pCD0vKu4liUm7fNYoO3CaTi6X71Oi8P80
        G0O31DoZOZt78uV44EWGXQDY19B9PeEOG999HIIY2aWa0999PI0IIeaaa8A99fDd2iaab889
        n9D0AiaWb889Hf604GgIIYaeaa9P8PuHX01208MB9IHm0K0041DqI86mySo77le1200W22Ge
        eW5UlBaOOyeup8a4aW4q014aWaQhUYw6M0BA8PD060a489y84GKIIYia4CDWDeaabaK_1j5S
        ZijjD3000X7r08RRxGhN0jlj54O00KsqsCCO00PRP7Uq1V5TWssssmZKWdbjDaaa4vm_sVKJ
        WocsMmJGIKJ3Rr98AHYjjjre22FAX11C8qQ2Ckjjvaqa4KsqMer4msms6I2IYSOPxGhH8y86
        QDYWmZC0880GerH080WYacaGer44U43C9991@@@xdaa49VVVerBuyv@d1999uyvVVa4aNPJG
        uHAqQ41X7L0essMj2020eoc2jk0fbjTGW10mqssgG010KRJRuHYaHoMj@vIc6f0200ee05oA
        uaNFQ8_ELg1uZp2_8I1VEhfZWJk0800GZZtKGjBH3OGuHtbW06lteGgT95UaCbD@m5FLKRR6
        j5aHzZGb8WADDXLD08CflC1MjIu4Lyv52XJ4KD0DWG00eg09iaabKWJ2GIIIoQqYMa98Kd3O
        999aa41j6fG5I5Kfi1f3MGzZL4U4739MGr1Qasf6h8Kn766ywI6H3KHQ040400ySBP23JiW7
        NXWa4KhH9qif5f1mGuuC4Ua3XWKo005m44pcjD50G84QssMM0080GRRRx1060bjjjpO040qi
        DQRI080atwijA020WgcssS0204OhRxOR2J1919miDa5Zaa4BsMci7IIbaOR3_C9LG2Chcs6B
        IGIQOFR309B9Gifj5X4a45swMTKoIaOReLs9HHIijMQxa459nMji9IqaaOr6cYHIOIamMsc3
        IMI0OJRX7H0OBRRe999oeDjPCaa810020daa9L0800IIsq400009bgU1WIIQ2jc0taaaG400
        0IJQYK40e_H4Cf99u@Sl3aaW4u@TFVI2GWu@lzl91PIu@6@xa419PUV@Fm899nyV@V2aWaWy
        t@FHIIIGyt@_098H2020nQxps00031iDJJ70400sCjj40W2eoscoA6010Wsssa80108QHpk6
        G000jDRB7G00bsWj50oCDgYIafYaE_BXYCC8G003muA4qDW1W040cseXkke8E03Q3eWS979J
        02I30Xm9e8R03g18Xh0AOk23M@m0K220d6DIvC@a2o14400oNH5H000r0iGl2CaURKXCWG94
        Iq9G3h1jHeE9CuQ1DEYIR078002ej09o8e010808000IMnXysHx@W4oNfaz9vf@@DIKCgE1a
        ekW5o_XYER6Qv9KgT0Xm0a8qwF66eYm9E8rY3E2uXGT4Al82mIYW899DHIIYYbaaWsSSW99G
        IeEKWWiaCKd2SIII2aba4119PerkW100ejWK010GC75A96zGw65C4G53WCHUV4K4HFf2SG35
        Aakn79LG1IIIYW6AWi4a499B9IJYIXMpHZZFa601eB99J3m14a4aXKPHd44aJW1zAOG80904
        0G002G10008220080100100KQm10D02WbijP0402sMskj0002I@RcsWK06azPBx4080KFVRR
        MW004gfjjyW000moscR040ePRRsP1Rs6PEH2kbO7Xa1D8qciX1Ia04QaMoA1GmQ8tds6GIGY
        WQAR6219I4iiPBfi899scjTKYaaOFp6o9MIGevP3p8f9DajDa54Wa6vIMcCJ4IWAqKgjRIYa
        8Ofss9PQI2iQRRW8991gDjDYaWaGRr4e99H0001YqcqMG20XI0JI40100B1fLY40IzZ6G0GJ
        Yaa0000eDQIIAX7H0IIuFzkB4099vzzkNY0a0mRVc7p6IImBzdg9B1GI_VN@814wx_z199H2
        uxt@2449XyV_@1I32G02e9DRF0G0ance5T0G43OHscM0083BBRJZC000aOPRJMG400iDDxUG
        00Wqqij80404QpsM0ew5RI3OYJ0MeKWBgGoYJNyee2DYLIZq0EeYR2M2eWyYAO5W3YkXWSgD
        8zT862eW_kF8YZ3_CIXq0EedWJIIwYbV01200mvbR4bm188002SYXB4Keja62EvWS5S8DW24
        1G0K9c2LMQHE1K4QG4F4OW000WlYk81Y6w3eX2UqejW3k3mWO8WW100mBeXa601X4aGoBCC1
        021rOG@BEaMJ38000c7eWM3Ye904UM0X@9iuLW4ICmWh2IeSW4wYHXPhr0100Gt04yWG25pm
        mW19y6G2H0GGB06a@r1B9yml0Ca6W3zaPHMaq4DG31DmGc254_G5z6KGh6Maxt735imV0BKS
        i10I00_10X09IeYY3Y6P21040b00nU140G0888e7o0O1G400Pehnp4HKH14jOq0IGIIaaaWG
        909Am91b4a481B9HIYW9B91HJIY8bWa09999rFoW489jmZAGQIIG2F80aWaCKd2GLMIg44aC
        9922Fw0IJIGX7PIyLjyG22ncaHaA6irm2R8GmN0CibEAbGKnk48qJA7PbOHYG6iH01vUmGe0
        8qhO397SGUH6Gbaaie884899rQK1I0I22FY298BArSY0GKIoQ0C0B9IIrr8a6m30910E7eWG
        3kekx560W1G60IoM_cCGW13QPRJUGW10fz5RJG300ptizLJW40YaTjDZ060Ao6sM4020GRBR
        p1G00qlzDxCWCJY0be0NoeXIM365Qpmo09eG2D29Vb009T0QMR3018HWiWD3l459osoi5Goa
        aiRxsE9HIIiaVBvS989qkXbRa6aaoKQ_22GIYS1PJc1e9I4P1rsS9HIaj5Rxaa991MjjDHaa
        a0qas6H2II0eO0WJQHI8W008f99PBW8WWaWMD1680W2QqaA080WRaaaO0800LJQIY000099D
        9rFIW9991FT_iW4ea8@PwOJGI20l9hzCP122dC_lc5881iRx@149998Vv@3W4a4m@z@PI2I2
        _l@Fy820208ecKss08280JQRL1100ajCPx1KY0io6jCU1G0eLjij82Q00acqsP0800QRQhY0
        10Gaji1FInGZYSYY9H2mHSTbyCW20A00Us5dB2GeS020200aLI60Y00Mm8Yc2Y0800GFEGSV
        m512gm32Fy93Dz781WW0Wk2Oe3W5Y82XMXa8D032EnWq0e0W00GQ0ByMW1hyeHErmq9T3f1W
        HcCCafP6bFKns4J80009vbGU0uWf7QO9g9_702GW00F1uW0W0W8hYum44AVu24404r6S0100
        XmZeu6c60220C5Z30C000110yQ04vAqGQ04CNm15FaGQ0CaBr1@IrGeCASu15dUmHs2LKPfA
        JuS3080Wp5I8f2E2ofWL380802Gy5IaJo4RdfGD1Haob2r192G00YGHHO7W8GIY2gaaa4899
        P1E8GJI2YWW45898HaiaaA999XKII2Waa4P19PEE480999Kd2aiaaq4O2IGI2ea4aqcJ1e9H
        Igkk0ebaa80993UyZo3Oej0AcQYX44suT5BY7HYBP4AdW9YBLcWJI8QY80100KtD1fE01III
        sGg8eWQ888996ye2GIIoqaaaG8999ye48B99bWT9KJIIg1W0IGI2vWI3G000PPVR60WG0jjl
        PB0m0GqtYjD8G08PRosECG00Tprsc0O009RORB5800Wjijv8000ostcTMscjGMIaaRRqM891
        I2jPORX4H9f6jiiJWia4ETjjXWWa8K6sc1JKImZ4WGMIY8xRRuH4OVRRn9989fjb9xa44ers
        wa92IY4SPtsW99I3KOmss1oIIaOPRxf999XijjDqaa4nrqsC2IIa00G0WJJWaA080099GIB4
        00W48D914QD1CDH8000d899HG000YacaaW7DGI00GuH4u@t@74abau@pRVIoI4uzxzhP9GIu
        zt@za488vSx@Fa899Hvv@VY4aaW_z@F12IImy@@1FQ00hf5R3000XmsajP000WOncsM000HA
        RJJhGW000RPRJYm00WfhDxIGWW79GX000esosGhVQ00SQl8ap7C89Q6Acn00180V2eH9DEi0
        01G102_33ZmZOOMY6kPIYsNC8XK5UkHXG0E09000A10WUKgeVk8kBUeU1C8ZW4c4WWGts040
        GGb6Ia6m7r0O1800X3IO0W00KE270490vBl5EnAa0IO8Qw8osU40200f1qHMZHq9047iJIn0
        Dar03F9pI8ldKyz6PP8IdBG40f2XMtM61BKgzKxAfHANeKUn1n1eGS2D8000G100G8YnSJo1
        XMd2199f2SIWcaeKEEAe899f6W2GHIIYCaai6W34baa81QIAqQ3C9194gJ2qaai2rnWghD05
        99PkE44QjAlSrHYLQaoL4jIGLPUQaY@5G2G0MsIZL0AuLhA27@32IMIv5nHerIGI2IYbab49
        9H9oIIGaaaiO999c6m5WaW42DGYHIEugb3G1800810Oh060201006pcjD51006RssUM0001H
        RRJx1001jjjbp0100qdjQRI000aqgjjI0000jsss1100aIRRxORRJ1999mgjj3Zaa4AmssW3
        II44ORpw89Ho2yfss6PIII8QRR30999Ykjj5jaa4nqsMT2IIaGRR5s89HGWjL3pa499qMjb1
        JaadSrsc2HIIoXqsscJIII8PRRs999HYfjPRaa49nocjDIom9Am99995008WaaaC500GOJI6
        U41mIIIb8000WJJYa800009fGhDeBW20baa81@@tSGIYaW@V@S99I2Y@zVUY899Xt@VFXaaW
        4V@@@WWaa8s@@xJIIY4s@l@58fAa8m7999I200CMRRs60008YjPBw2006WcjDb0002Vss6E1
        2008Yssca000WVRRsb0000XjPR1100e_Ey8SsVnWGsWfK3B_qccpL19@u4_58YSFm0808m91
        pym43v1i0810W_AKuY_HEar4010Ghc2nvzLKvI1x2UGQ0I8I008dW9I3WWW7Tu9e722wYg4g
        OEW2gVqaeeS8JcH2jsZaaK9y8GsFeXBgSfheE2FgaWWagJ0N8000yGgC1DeHq0KG040e605s
        6mWu4EfWWEUBW21020t2Om95E4l81vHCJS2RqJg5T2On@14WaWb09899KIImi6D8Kd50GIIc
        ZZ20III2FI1aaiqA998Rp91ceaar0GWkaaamZE0g99P2FH4QjE9MHpBw@qNXGr0i1A0Geq0M
        fee288A9rMT11DqGuHZWeaa4H99PD0783999D06wYaXW6C8q0Hwn828WjjQQ0008qsgjy008
        0Ihssc1080cQRxh00008RRRp0000ejjDR1000Wssij30008RpssPhMc69IIGkQRBd899Bejj
        j1aaa4mscULIIGanss_Ag0jjjHaaa4rsss2IIIYORRRmZ4ORRBp99D9ejjDpaaa8rsci5IIW
        aSRJcc99IISxmZA0sssMuH4C803I00WQSiWMZAWf00mc5480040KIIYK10WQ0K8V62s@cWmZ
        Cm@@UF8999o@@V_aaa0n@VxFJIYam@l_l99IIm@_@V8h1WWmZAm@@@VD054UK10084KRRQJ0
        004WjjDg0040ossij0000MRpM61000KhssM0000WQRRx0000K3W1WQRR3FgWoXcPf8fomGgb
        iI8sYFgvWXr6Feo9FwWaWQQShb764100azZA988HbBr4QzGr0SIf2xqM44XMJIT0Hif4ARkp
        JeRP4U4Y5EL3200WOeM8jp7seMayew9qQIQC1cE1G080000X0WR8OeE8NW000K3m5bCYGeE5
        89P1f0728B9PHIII4B99PMZ64gJ3zmGGREBGJoIYiae49898YIIMaWa4nIIIYWaaCX7A2Fwe
        0qqesHtQLuWSQR8GZQo_WXqeh8R13aba4Kgm1aWaW819P5Ua7IGII4a4Wa6028G99JIgYaoD
        8y8608104RHB03WiP3R3001Wcjrj50020ssksS0030PR7@x31X7XX6s69IKIiQhRZ89B9gjT
        j5aaW4nsEMTIIKamss2FA3Mss9j6HWqs99IIYjQORaU2W0ORcaX7rHhH4OI4000Wa4D91WMZ
        K0D92GuHQup@X4989l@x@Ja4a4_@t@RDg0v@JI4aa@3FI3W1GjX7H010iD3R70020sibj500
        3WosYsQuHUC0GXrcSH0DD0m00e102_7MaY88e9Y4_2W00110r00HRzIKzC24000W044a6W2T
        1SGD8H8018ecceY38ZkeB8aAMgXkWjbhewDaYwvXhWSer8MoV01H000ffia888XE1K0880G1
        1Nyb24JKiWW40Wdep8ekwY6OKGG00H3Wr8764QG8LY0HzMhbvg4lJKGuHT01a4iDd3Waaa88
        159dw5Waa44QD3X9@GrEEamp6jVyKDdCC0WUXMZHE1T4@x2reOGYLTKgG3IGGIALu0IGIY09
        893jMaW6KvWa2A80XpMEeqW5o9W2j99jC000mORRpIIIYKRIYsC000Wtsijla89vDa7G1yD0
        0W9100i50e2R2a6000Z000O0000Ya499cabIY0GIII0IIIJ3O00Z0WjOM0900GUm7WaaaK00
        0GIA70999fb06_unW10AeKW3o9u0RRhb8997aaaK2000osss6JIIIO999o3000S30009000k
        400m0WS2AW900Wa00WD08GIIIYJIIICjjjwijjPtaa89da49PRhssRRssU200WJ000k900mK
        10061008A000o600Wr004Q01Wjjj92aa4d410000WsssA0II00IIY40000I307Vi0M00WQ58
        uwW201aaaU010aaa81004S01XMGWaaaima9e6WCKGI2W999H2IIoq15GI204999CIIIoX18G
        IIo40008A99953G0999I000WWaa4ejjj1DRxLbaa4nQRRsRRRsExsis99HI2scjji9IIYDII
        Ib899HL999paaaKcaa4JIII4TIIaGxVrM@IY_jjLRxd499tU@jT@89@NBag09l99IgljPxsa
        89PocjjRYaaiVssslIIIYORRxrOY3BryGeRbqUeHX86p00RiCH3G2002FY4a001T0eGQ0C4S
        27PrCHr1WKy230230QcHcMfO8e1KgegX66i9ib@o98ciVE9D082uSfolCedCDA@JZg3o8S2C
        IGuYTQA8UAYI4Ga228O2h60a40aJ04lhv0G20Ws2KuG19211anOM011GGD09SGp1N3qmk0IK
        L021Qi10XWW6J_PNW52S230999b_e001HfiVoWGIIIGGCGGKIg1e6GGMI6Yu71EbKj28K3W3
        @Mamw15yPV5V8SG_UG04008DWGgjm24004j5WX040WrDcew02A5uXF08eW03GI004u46DQH0
        P9BfI588k92WbWi9H6Ig602W0IIYWWai602uaaa88899R12GGIIWaWa8TT2aWaab60140aW8
        99P1I0I4B99Pd05qJg1Wa4bgx6XW6C8iI9MbFXQ0WOvY208800W00A702W00200W00G0010G
        GWQ0w0;
    INTEGER CHECKSUM =31205;
ENDDATA;


PROCEDURE DO_EXIT USES GV;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $81;
    WAIT IDLE, 250 USEC;
    IRSCAN 8, $81, CAPTURE BUFF128[7..0];
    IF ( ! (BUFF128[2]==0) ) THEN GOTO Label_0;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $07;
    WAIT IDLE, 1 CYCLES;
    WAIT IDLE, 200 USEC;
    Label_0:
    IRSCAN 8, $ff;
    WAIT IDLE, 200 USEC;
    WAIT RESET, 3 CYCLES;
    EXIT STATUS;
ENDPROC;

PROCEDURE DO_READ_SECURITY USES GV;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $a4;
    WAIT IDLE, 3 CYCLES;
    DRSCAN 44, $00000000000, CAPTURE SECREG[];
    ULUWE = SECREG[ULUWE_BITLOCATION];
    ULARE = SECREG[ULARE_BITLOCATION];
    ULUPC = SECREG[ULUPC_BITLOCATION];
    ULUFE = SECREG[ULUFE_BITLOCATION];
    ULUFP = SECREG[ULUFP_BITLOCATION];
    ULUFJ = SECREG[ULUFJ_BITLOCATION];
    ULFLR = SECREG[ULFLR_BITLOCATION];
    ULULR = SECREG[ULULR_BITLOCATION];
    ULAWE = SECREG[ULAWE_BITLOCATION];
    ULARD = SECREG[ULARD_BITLOCATION];
    ULOPT[1] = SECREG[ULOPT1_BITLOCATION];
    ULOPT[0] = SECREG[ULOPT0_BITLOCATION];
ENDPROC;

PROCEDURE DO_OUTPUT_SECURITY USES GV;
    PRINT "Security Settings :";
    IF ( ! (ULUFP==1) ) THEN GOTO Label_1;
    PRINT "FlashROM Write/Erase protected by pass key.";
    Label_1:
    IF ( ! (ULUFJ==1) ) THEN GOTO Label_2;
    PRINT "FlashROM Read protected by pass key.";
    Label_2:
    IF ( ! (ULAWE==1) ) THEN GOTO Label_3;
    PRINT "Array Write/Erase protected by pass key.";
    Label_3:
    IF ( ! (ULARD==1) ) THEN GOTO Label_4;
    PRINT "Array Verify protected by pass key.";
    Label_4:
    IF ( ! (ULUFE==1) ) THEN GOTO Label_5;
    PRINT "Encrypted FlashROM Programming Enabled.";
    Label_5:
    IF ( ! (ULARE==1) ) THEN GOTO Label_6;
    PRINT "Encrypted FPGA Array Programming Enabled.";
    Label_6:
    PRINT "=========================================";
ENDPROC;

PROCEDURE DO_QUERY_SECURITY USES DO_READ_SECURITY,DO_OUTPUT_SECURITY;
    CALL DO_READ_SECURITY;
    CALL DO_OUTPUT_SECURITY;
ENDPROC;

PROCEDURE READ_UROW USES BITSTREAM,GV;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $c0;
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $a8;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 165 USEC;
    DRSCAN 128, $00000000000000000000000000000000, CAPTURE UROW[];
    SUROWALGOVERSION[6..0] = $00;
    IF ( ! ( (UROW[5]==0)&&(UROW[0]==1)) ) THEN GOTO Label_7;
    SUROWALGOVERSION[5..4] = UROW[24..23];
    Label_7:
    IF ( ! ( (UROW[5]==1)&&(UROW[0]==0)) ) THEN GOTO Label_8;
    SUROWALGOVERSION[5..4] = UROW[24..23];
    SUROWALGOVERSION[6] = 1;
    Label_8:
    SUROWCHECKSUM[15..0] = UROW[127..112];
    SUROWCYCLECOUNT = INT(UROW[111..102]);
    SUROWDESIGNNAME[69..0] = UROW[101..32];
    SUROWPROGMETHOD[2..0] = UROW[31..29];
    SUROWALGOVERSION[3..0] = UROW[28..25];
    SUROW_PKG_TYPE[5..0] = UROW[22..17];
    SUROW_SW_VERSION[6..0] = UROW[16..10];
    SUROWPROGRAMSW[3..0] = UROW[9..6];
    SUROW_SRAM_DISTURB[0] = UROW[4];
    SUROW_SPEED_GRADE[2..0] = UROW[3..1];
    ACT_UROW_CYCLE_COUNT = SUROWCYCLECOUNT;
ENDPROC;

PROCEDURE FIX_INT_ARRAYS USES GV;
    IF ( ! (HEX[0]!=48) ) THEN GOTO Label_9;
    FOR I = 0 TO 7;
        TEMP = HEX[I];
        HEX[I] = HEX[(15-I)];
        HEX[(15-I)] = TEMP;
    NEXT I;
    Label_9:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DISP_CHKSUM_DESIGN USES GV,FIX_INT_ARRAYS;
    CALL FIX_INT_ARRAYS;
    IF ( ! (INT(SUROWCHECKSUM[15..0])==65535) ) THEN GOTO Label_10;
    PRINT "CHECKSUM: ";
    Label_10:
    IF ( ! (INT(SUROWCHECKSUM[15..0])!=65535) ) THEN GOTO Label_11;
    PRINT "CHECKSUM: ",CHR$(HEX[INT(SUROWCHECKSUM[15..12])]),CHR$(HEX[INT(SUROWCHECKSUM[11..8])])
        ,CHR$(HEX[INT(SUROWCHECKSUM[7..4])]),CHR$(HEX[INT(SUROWCHECKSUM[3..0])]);
    Label_11:
    IF ( ! ( ( (INT(SUROWDESIGNNAME[0..30])==2147483647)&&(INT(SUROWDESIGNNAME[31..61])==2147483647))&&(INT(SUROWDESIGNNAME[62..69])==255)) ) THEN GOTO Label_12;
    PRINT "Design Name: ";
    Label_12:
    IF ( ! ( ( (INT(SUROWDESIGNNAME[0..30])!=2147483647)||(INT(SUROWDESIGNNAME[31..61])!=2147483647))||(INT(SUROWDESIGNNAME[62..69])!=255)) ) THEN GOTO Label_13;
    PRINT "Design Name: ",CHR$(INT(SUROWDESIGNNAME[63..69])),CHR$(INT(SUROWDESIGNNAME[56..62]))
        ,CHR$(INT(SUROWDESIGNNAME[49..55])),CHR$(INT(SUROWDESIGNNAME[42..48])),CHR$(INT(SUROWDESIGNNAME[35..41]))
        ,CHR$(INT(SUROWDESIGNNAME[28..34])),CHR$(INT(SUROWDESIGNNAME[21..27])),CHR$(INT(SUROWDESIGNNAME[14..20]))
        ,CHR$(INT(SUROWDESIGNNAME[7..13])),CHR$(INT(SUROWDESIGNNAME[0..6]));
    Label_13:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DISPLAY_UROW USES BITSTREAM,CONSTBLOCK,GV,DISP_CHKSUM_DESIGN;
    EXPORT "USER_ROW", UROW[127..0];
    PRINT "User information: ";
    CALL DISP_CHKSUM_DESIGN;
    IF ( ! (FLAGDISPLAYCYC==1) ) THEN GOTO Label_14;
    PRINT "CYCLE COUNT: ",SUROWCYCLECOUNT;
    Label_14:
    INTEGER TMPINT =INT(SUROWPROGMETHOD[]);
    INTEGER TMPINT2 =0;
    INTEGER TMPINT3 =0;
    INTEGER TMPINT4 =0;
    INTEGER TMPINT5 =0;
    IF ( ! (TMPINT==IEEE1532) ) THEN GOTO Label_15;
    PRINT "Programming Method: IEEE1532";
    Label_15:
    IF ( ! (TMPINT==STAPL) ) THEN GOTO Label_16;
    PRINT "Programming Method: STAPL";
    Label_16:
    IF ( ! (TMPINT==DIRECTC) ) THEN GOTO Label_17;
    PRINT "Programming Method: DirectC";
    Label_17:
    IF ( ! (TMPINT==PDB) ) THEN GOTO Label_18;
    PRINT "Programming Method: PDB";
    Label_18:
    IF ( ! (TMPINT==SVF) ) THEN GOTO Label_19;
    PRINT "Programming Method: SVF";
    Label_19:
    PRINT "Algorithm Version: ",INT(SUROWALGOVERSION[6..0]);
    TMPINT = INT(SUROW_PKG_TYPE[]);
    IF ( ! (TMPINT==UNSPECIFIED) ) THEN GOTO Label_20;
    PRINT "Device Package Type: package information not available from device";
    Label_20:
    IF ( ! (TMPINT==QN132) ) THEN GOTO Label_21;
    PRINT "Device Package Type: QN132/QNG132";
    Label_21:
    IF ( ! (TMPINT==VQ100) ) THEN GOTO Label_22;
    PRINT "Device Package Type: VQ100/VQG100";
    Label_22:
    IF ( ! (TMPINT==TQ144) ) THEN GOTO Label_23;
    PRINT "Device Package Type: TQ144/TQG144";
    Label_23:
    IF ( ! (TMPINT==PQ208) ) THEN GOTO Label_24;
    PRINT "Device Package Type: PQ208/PQG208";
    Label_24:
    IF ( ! (TMPINT==FG144) ) THEN GOTO Label_25;
    PRINT "Device Package Type: FG144/FGG144";
    Label_25:
    IF ( ! (TMPINT==FG256) ) THEN GOTO Label_26;
    PRINT "Device Package Type: FG256/FGG256";
    Label_26:
    IF ( ! (TMPINT==FG484) ) THEN GOTO Label_27;
    PRINT "Device Package Type: FG484/FGG484";
    Label_27:
    IF ( ! (TMPINT==FG676) ) THEN GOTO Label_28;
    PRINT "Device Package Type: FG676/FGG676";
    Label_28:
    IF ( ! (TMPINT==FG896) ) THEN GOTO Label_29;
    PRINT "Device Package Type: FG896/FGG896";
    Label_29:
    IF ( ! (TMPINT==QN108) ) THEN GOTO Label_30;
    PRINT "Device Package Type: QN108/QNG108";
    Label_30:
    IF ( ! (TMPINT==QN180) ) THEN GOTO Label_31;
    PRINT "Device Package Type: QN180/QNG180";
    Label_31:
    IF ( ! (TMPINT==TQ100) ) THEN GOTO Label_32;
    PRINT "Device Package Type: TQ100/TQG100";
    Label_32:
    IF ( ! (TMPINT==CQ208) ) THEN GOTO Label_33;
    PRINT "Device Package Type: CQ208/CQG208";
    Label_33:
    IF ( ! (TMPINT==FG1152) ) THEN GOTO Label_34;
    PRINT "Device Package Type: FG1152/FGG1152";
    Label_34:
    IF ( ! (TMPINT==BG456) ) THEN GOTO Label_35;
    PRINT "Device Package Type: BG456/BGG456";
    Label_35:
    IF ( ! (TMPINT==UNDEFINED) ) THEN GOTO Label_36;
    PRINT "Device Package Type: package information not available from device";
    Label_36:
    TMPINT = INT(SUROW_SPEED_GRADE[]);
    IF ( ! (TMPINT==GRADE_UNSPEC) ) THEN GOTO Label_37;
    PRINT "Device Speed Grade: speed grade information not available from device";
    Label_37:
    IF ( ! (TMPINT==GRADE_1) ) THEN GOTO Label_38;
    PRINT "Device Speed Grade: -1";
    Label_38:
    IF ( ! (TMPINT==GRADE_2) ) THEN GOTO Label_39;
    PRINT "Device Speed Grade: -2";
    Label_39:
    IF ( ! (TMPINT==GRADE_3) ) THEN GOTO Label_40;
    PRINT "Device Speed Grade: -3";
    Label_40:
    IF ( ! (TMPINT==GRADE_F) ) THEN GOTO Label_41;
    PRINT "Device Speed Grade: -F";
    Label_41:
    IF ( ! (TMPINT==GRADE_STD) ) THEN GOTO Label_42;
    PRINT "Device Speed Grade: STD";
    Label_42:
    IF ( ! (TMPINT==GRADE_4) ) THEN GOTO Label_43;
    PRINT "Device Speed Grade: -4";
    Label_43:
    IF ( ! (TMPINT==GRADE_UNDEF) ) THEN GOTO Label_44;
    PRINT "Device Speed Grade: speed grade information not available from device";
    Label_44:
    TMPINT = INT(SUROWPROGRAMSW[]);
    IF ( ! (TMPINT==FP) ) THEN GOTO Label_45;
    PRINT "Programmer: FlashPro";
    Label_45:
    IF ( ! (TMPINT==FPLITE) ) THEN GOTO Label_46;
    PRINT "Programmer: FlashPro Lite";
    Label_46:
    IF ( ! (TMPINT==FP3) ) THEN GOTO Label_47;
    PRINT "Programmer: FlashPro3";
    Label_47:
    IF ( ! (TMPINT==FP4) ) THEN GOTO Label_48;
    PRINT "Programmer: FlashPro4";
    Label_48:
    IF ( ! (TMPINT==SCULPTW) ) THEN GOTO Label_49;
    PRINT "Programmer: SiliconSculptor II";
    Label_49:
    IF ( ! (TMPINT==BPW) ) THEN GOTO Label_50;
    PRINT "Programmer: BP Programmer";
    Label_50:
    IF ( ! (TMPINT==DIRECTCP) ) THEN GOTO Label_51;
    PRINT "Programmer: DirectC";
    Label_51:
    IF ( ! (TMPINT==STP) ) THEN GOTO Label_52;
    PRINT "Programmer: Actel JAM Player";
    Label_52:
    IF ( ! ( ( ( (TMPINT==FP)||(TMPINT==FPLITE))||(TMPINT==FP3))||(TMPINT==FP4)) ) THEN GOTO Label_68;
    TMPINT2 = INT(SUROW_SW_VERSION[]);
    IF ( ! (TMPINT2==FP33) ) THEN GOTO Label_53;
    PRINT "Software: FlashPro v3.3";
    Label_53:
    IF ( ! (TMPINT2==FP34) ) THEN GOTO Label_54;
    PRINT "Software: FlashPro v3.4";
    Label_54:
    IF ( ! (TMPINT2==FP40) ) THEN GOTO Label_55;
    PRINT "Software: FlashPro v4.0";
    Label_55:
    IF ( ! (TMPINT2==FP41) ) THEN GOTO Label_56;
    PRINT "Software: FlashPro v4.1";
    Label_56:
    IF ( ! (TMPINT2==FP42) ) THEN GOTO Label_57;
    PRINT "Software: FlashPro v4.2";
    Label_57:
    IF ( ! (TMPINT2==FP50) ) THEN GOTO Label_58;
    PRINT "Software: FlashPro v5.0";
    Label_58:
    IF ( ! (TMPINT2==FP51) ) THEN GOTO Label_59;
    PRINT "Software: FlashPro v5.1";
    Label_59:
    IF ( ! (TMPINT2==FP60) ) THEN GOTO Label_60;
    PRINT "Software: FlashPro v6.0";
    Label_60:
    IF ( ! (TMPINT2==FP61) ) THEN GOTO Label_61;
    PRINT "Software: FlashPro v6.1";
    Label_61:
    IF ( ! (TMPINT2==FP62) ) THEN GOTO Label_62;
    PRINT "Software: FlashPro v6.2";
    Label_62:
    IF ( ! (TMPINT2==FP84) ) THEN GOTO Label_63;
    PRINT "Software: FlashPro v8.4";
    Label_63:
    IF ( ! (TMPINT2==FP85) ) THEN GOTO Label_64;
    PRINT "Software: FlashPro v8.5";
    Label_64:
    IF ( ! (TMPINT2==FP86) ) THEN GOTO Label_65;
    PRINT "Software: FlashPro v8.6";
    Label_65:
    IF ( ! (TMPINT2==FP90) ) THEN GOTO Label_66;
    PRINT "Software: FlashPro v9.0";
    Label_66:
    IF ( ! (TMPINT2==UNKNOWN) ) THEN GOTO Label_67;
    PRINT "Software: FlashPro vX.X";
    Label_67:
    LABEL_SEPARATOR = 0;
    Label_68:
    IF ( ! ( (TMPINT==SCULPTW)||(TMPINT==BPW)) ) THEN GOTO Label_72;
    TMPINT3 = (INT(SUROW_SW_VERSION[6..5])+SCULPTORMAJORBASE);
    TMPINT4 = (INT(SUROW_SW_VERSION[4..1])+SCULPTORMINORBASE);
    TMPINT5 = 0;
    IF ( ! (SUROW_SW_VERSION[0]==1) ) THEN GOTO Label_69;
    TMPINT5 = 1;
    Label_69:
    IF ( ! (TMPINT==SCULPTW) ) THEN GOTO Label_70;
    PRINT "Software: Sculptor Win v",TMPINT3,".",TMPINT4,".",TMPINT5;
    Label_70:
    IF ( ! (TMPINT==BPW) ) THEN GOTO Label_71;
    PRINT "Software: BP Win v",TMPINT3,".",TMPINT4,".",TMPINT5;
    Label_71:
    LABEL_SEPARATOR = 0;
    Label_72:
    PRINT "=========================================";
ENDPROC;

PROCEDURE READ_F_ROW USES GV;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $c0;
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $f9;
    DRSCAN 3, FADDR[];
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $bf;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 165 USEC;
    DRSCAN 128, $00000000000000000000000000000000, CAPTURE BUFF128[];
ENDPROC;

PROCEDURE DO_DEVICE_INFO USES GV,READ_UROW,DISPLAY_UROW,READ_F_ROW;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $0e;
    WAIT IDLE, 1 CYCLES;
    DRSCAN 32, $00000000, CAPTURE BUFF32[];
    EXPORT "SILSIG", BUFF32[];
    IRSCAN 8, $84, CAPTURE BUFF128[7..0];
    IF ( ! (BUFF128[2]==1) ) THEN GOTO CORE_NOT_ENABLED;
    PRINT "FPGA Array is programmed and enabled.";
    CORE_NOT_ENABLED:
    IF ( ! (BUFF128[2]==0) ) THEN GOTO CORE_ENABLED;
    PRINT "FPGA Array is not enabled.";
    CORE_ENABLED:
    CALL READ_UROW;
    CALL DISPLAY_UROW;
    FADDR[] = $0;
    CALL READ_F_ROW;
    EXPORT "FSN", BUFF128[55..8];
    PRINT "=========================================";
ENDPROC;

PROCEDURE INIT_AES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $dd;
    DRSCAN 128, $00000000000000000000000000000000;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 165 USEC;
ENDPROC;

PROCEDURE DO_VERIFY_DEVICE_INFO USES GV,BITSTREAM,DO_EXIT,DO_READ_SECURITY,READ_UROW
    ,DISP_CHKSUM_DESIGN;
    CALL READ_UROW;
    CALL DISP_CHKSUM_DESIGN;
    CALL DO_READ_SECURITY;
    BUFF32[31..0] = BOOL(CHECKSUM);
    UROW[127..112] = BUFF32[15..0];
    UROW[101..32] = ACT_UROW_DESIGN_NAME[69..0];
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $c0;
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $a8;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 165 USEC;
    DRSCAN 128, $00000000000000000000000000000000,COMPARE UROW[],$ffff003fffffffffffffffff00000000
        ,PASS;
    IF ( ! (PASS==0) ) THEN GOTO UROW_CMP_OK;
    STATUS = -43;
    PRINT "Failed to verify design information.";
    UNIQUEEXITCODE = 32772;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    UROW_CMP_OK:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE READ_IDCODE_ONLY USES GV;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $0f;
    WAIT IDLE, 1 CYCLES;
    DRSCAN 32, $00000000, CAPTURE ID[];
    EXPORT "IDCODE", ID[];
ENDPROC;

PROCEDURE VERIFY_RLOCK USES GV;
    IRSCAN 8, $84, CAPTURE BUFF128[7..0],COMPARE $04,$04,PASS;
ENDPROC;

PROCEDURE DO_VERIFY_PGM_RLOCK USES GV,DO_EXIT,VERIFY_RLOCK;
    CALL VERIFY_RLOCK;
    IF ( ! (PASS==0) ) THEN GOTO RLOCK_PGM_PASS;
    STATUS = 10;
    PRINT "Failed to enable FPGA Array.";
    UNIQUEEXITCODE = 32891;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    RLOCK_PGM_PASS:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_VERIFY_RLOCK USES GV,DO_EXIT,VERIFY_RLOCK;
    CALL VERIFY_RLOCK;
    IF ( ! (PASS==0) ) THEN GOTO RLOCK_VERIFY_PASS;
    STATUS = 11;
    PRINT "FPGA Array is not enabled.";
    UNIQUEEXITCODE = 32892;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    RLOCK_VERIFY_PASS:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE VERIFY_ID_DMK USES GV,DO_EXIT,INIT_AES;
    CALL INIT_AES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $0a;
    DRSCAN 128, M7BUFF[];
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 90 USEC;
    DRSCAN 128, $00000000000000000000000000000000, CAPTURE BUFF128[],COMPARE $c0000000000000000000000000000000
        ,$c0000000000000000000000000000000,PASS;
    IF ( ! (BUFF128[127]==0) ) THEN GOTO M7VERDONE;
    STATUS = -31;
    PRINT "Failed to verify AES Sec.";
    UNIQUEEXITCODE = 32775;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    M7VERDONE:
    IF ( ! ( (BUFF128[126]==0)||(BM7DEVICE==0)) ) THEN GOTO MXIDOK;
    IF ( ! ( (BUFF128[126]==1)&&(BM7DEVICE==0)) ) THEN GOTO LDETECTM1;
    STATUS = 6;
    PRINT "Failed to verify IDCODE.";
    PRINT "Target is an M7 device.";
    UNIQUEEXITCODE = 32776;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    LDETECTM1:
    IF ( ! (BUFF128[126]==0) ) THEN GOTO Label_75;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $0a;
    DRSCAN 128, M1BUFF[];
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 90 USEC;
    DRSCAN 128, $00000000000000000000000000000000, CAPTURE BUFF128[],COMPARE $c0000000000000000000000000000000
        ,$c0000000000000000000000000000000,PASS;
    IF ( ! (BUFF128[127]==0) ) THEN GOTO M1VERDONE;
    STATUS = -31;
    PRINT "Failed to verify AES Sec.";
    UNIQUEEXITCODE = 32777;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    M1VERDONE:
    BOOLEAN BTMPBUFFBIT126 = BUFF128[126];
    IF ( ! ( (BTMPBUFFBIT126==1)&&(BM1DEVICE==0)) ) THEN GOTO REGDEV;
    STATUS = 6;
    PRINT "Failed to verify IDCODE.";
    PRINT "Target is an M1 device.";
    UNIQUEEXITCODE = 32778;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    REGDEV:
    IF ( ! ( (BTMPBUFFBIT126==0)&&(BM7DEVICE==1)) ) THEN GOTO Label_73;
    STATUS = 6;
    PRINT "Failed to verify IDCODE.";
    PRINT "The Target is not an M7 Device.";
    UNIQUEEXITCODE = 32781;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_73:
    IF ( ! ( (BTMPBUFFBIT126==0)&&(BM1DEVICE==1)) ) THEN GOTO Label_74;
    STATUS = 6;
    PRINT "Failed to verify IDCODE.";
    PRINT "The Target is not an M1 Device.";
    UNIQUEEXITCODE = 32782;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_74:
    LABEL_SEPARATOR = 0;
    Label_75:
    LABEL_SEPARATOR = 0;
    MXIDOK:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE VERIFY_IDCODE USES GV,PARAMETERS,DO_EXIT,VERIFY_ID_DMK;
    FREQUENCY (FREQ*1000000);
    WAIT RESET, 5 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $0f;
    DRSCAN 32, $00000000;
    WAIT IDLE, 1 CYCLES;
    DRSCAN 32, $00000000, CAPTURE ID[],COMPARE IDCODEVALUE[],IDMASK[],PASS;
    IF ( ! (PASS==0) ) THEN GOTO IDOK;
    STATUS = 6;
    PRINT "Failed to verify IDCODE";
    UNIQUEEXITCODE = 32797;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    IDOK:
    CALL VERIFY_ID_DMK;
    IDREV = INT(ID[31..28]);
    IDFAB = INT(ID[24..24]);
ENDPROC;

PROCEDURE IS_SECOK USES GV,DO_EXIT;
    IF ( ! (SECKEY_OK==0) ) THEN GOTO SECOK;
    STATUS = -35;
    PRINT "Failed to match pass key.";
    UNIQUEEXITCODE = 32799;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    SECOK:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_CHECK_R USES GV,DO_EXIT,DO_READ_SECURITY;
    CALL DO_READ_SECURITY;
    IF ( ! (ULARE==1) ) THEN GOTO ARRAYEPR;
    STATUS = -33;
    PRINT "FPGA Array Encryption is enforced. Plain text verification is prohibited.";
    UNIQUEEXITCODE = 32800;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    ARRAYEPR:
    IF ( ! (ULARD==1) ) THEN GOTO SKIPRCHK1;
    STATUS = -30;
    PRINT "FPGA Array Verification is protected by pass key.";
    PRINT "A valid pass key needs to be provided.";
    UNIQUEEXITCODE = 32804;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    SKIPRCHK1:
    IF ( ! (ULARD==0) ) THEN GOTO Label_76;
    CHKSEC = 0;
    Label_76:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_CHECK_W USES GV,DO_EXIT,DO_READ_SECURITY;
    CALL DO_READ_SECURITY;
    IF ( ! (ULAWE==1) ) THEN GOTO ARRAYWP;
    STATUS = -28;
    PRINT "FPGA Array Write/Erase is protected by pass key.";
    PRINT "A valid pass key needs to be provided.";
    UNIQUEEXITCODE = 32805;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    ARRAYWP:
    IF ( ! (ULARD==1) ) THEN GOTO ARRAYRPW;
    STATUS = -30;
    PRINT "FPGA Array Verification is protected by pass key.";
    PRINT "A valid pass key needs to be provided.";
    UNIQUEEXITCODE = 32806;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    ARRAYRPW:
    IF ( ! (ULARE==1) ) THEN GOTO ARRAYEPW;
    STATUS = -33;
    PRINT "FPGA Array Encryption is enforced. Plain text programming is prohibited.";
    CALL DO_EXIT;
    ARRAYEPW:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE BP_VER USES GV;
    BOOLEAN PLAYER_VERSION_BOOLEAN[32];
    PLAYER_VERSION_BOOLEAN[31..0] = BOOL(PLAYERVERSIONVARIABLE);
    INTEGER PLAYER_MAJOR_VERSION =(INT(PLAYER_VERSION_BOOLEAN[23..16])-SCULPTORMAJORBASE);
    INTEGER PLAYER_MINOR_VERSION =(INT(PLAYER_VERSION_BOOLEAN[15..8])-SCULPTORMINORBASE);
    ACT_UROW_SW_VERSION[6..5] = BOOL(PLAYER_MAJOR_VERSION);
    ACT_UROW_SW_VERSION[4..1] = BOOL(PLAYER_MINOR_VERSION);
    ACT_UROW_SW_VERSION[0] = PLAYER_VERSION_BOOLEAN[0];
ENDPROC;

PROCEDURE SET_PRG_ARRAY USES GV;
    ISPRGARRAY = 1;
ENDPROC;

PROCEDURE DO_INITIALIZE USES GV,DO_EXIT,READ_F_ROW,DO_CHECK_R,DO_CHECK_W,BP_VER;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $7f;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 50 USEC;
    BSR[371..0] = BSRPATTERN[371..0];
    BOOLEAN SHIFT_DATA[372];
    IRSCAN 8, $01;
    DRSCAN 372, BSR[];
    WAIT IDLE, 1 CYCLES;
    DRSCAN 372, SHIFT_DATA[], CAPTURE SAMPLE_DEVICE[];
    FOR I = 0 TO 371;
        IF ( ! (SAMPLEMASK[I]==1) ) THEN GOTO Label_77;
        BSR[I] = SAMPLE_DEVICE[I];
        Label_77:
        LABEL_SEPARATOR = 0;
    NEXT I;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $01;
    DRSCAN 372, BSR[];
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $c0;
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $80;
    DRSCAN 18, $00000;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 1875 USEC;
    DRSCAN 18, $00000, CAPTURE ISC_CONFIG_RESULT[],COMPARE $30000,$30000,PASS;
    IF ( ! (PASS==0) ) THEN GOTO CRCOK;
    STATUS = 5;
    PRINT "Failed to enter programming mode.";
    EXPORT "ISC_Config_Result", ISC_CONFIG_RESULT[];
    UNIQUEEXITCODE = 32850;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    CRCOK:
    FADDR[] = $0;
    CALL READ_F_ROW;
    EXPORT "FSN", BUFF128[55..8];
    IF ( ! (CHKARRAY==1) ) THEN GOTO SKIPCHKARRAY;
    IF ( ! (ARRAYRONLY==0) ) THEN GOTO Label_78;
    CALL DO_CHECK_W;
    Label_78:
    IF ( ! (ARRAYRONLY==1) ) THEN GOTO Label_79;
    CALL DO_CHECK_R;
    Label_79:
    LABEL_SEPARATOR = 0;
    SKIPCHKARRAY:
    IF ( ! (PLAYERVERSIONVARIABLE!=0) ) THEN GOTO Label_80;
    CALL BP_VER;
    Label_80:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE READ_INITIALIZE USES GV,DO_INITIALIZE;
    CHKFROM = 0;
    CHKARRAY = 0;
    CHKNVM = 0;
    CHKSEC = 0;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE NW_INITIALIZE_COMMON USES GV;
    CHKFROM = 0;
    CHKARRAY = 0;
ENDPROC;

PROCEDURE NW_INITIALIZE USES DO_INITIALIZE,NW_INITIALIZE_COMMON;
    CALL NW_INITIALIZE_COMMON;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE NR_INITIALIZE_COMMON USES GV;
    CHKFROM = 0;
    CHKARRAY = 0;
ENDPROC;

PROCEDURE NR_INITIALIZE USES DO_INITIALIZE,NR_INITIALIZE_COMMON;
    CALL NR_INITIALIZE_COMMON;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE AW_INITIALIZE USES GV,DO_INITIALIZE;
    ARRAYRONLY = 0;
    CHKFROM = 0;
    CHKARRAY = 1;
    CHKNVM = 0;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE AR_INITIALIZE USES GV,DO_INITIALIZE;
    ARRAYRONLY = 1;
    CHKFROM = 0;
    CHKARRAY = 1;
    CHKNVM = 0;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE W_INITIALIZE USES GV,DO_INITIALIZE;
    ARRAYRONLY = 0;
    CHKARRAY = 1;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE R_INITIALIZE USES GV,DO_INITIALIZE;
    ARRAYRONLY = 1;
    CHKARRAY = 1;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE INITIALIZE USES GV,DO_INITIALIZE;
    ARRAYRONLY = 0;
    FROMRONLY = 0;
    CHKFROM = 1;
    CHKARRAY = 1;
    CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE POLL_ERASE USES GV;
    PASS = 0;
    INTEGER ILOOP_0;
    FOR ILOOP_0 = 262141 - 1 TO 0 STEP -1;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $84;
        WAIT IDLE, 1 CYCLES;
        WAIT IDLE, 1000 USEC;
        DRSCAN 5, $00,COMPARE $00,$03,PASS;
        IF PASS THEN ILOOP_0 = 0;
    NEXT ILOOP_0;
ENDPROC;

PROCEDURE POLL_PROGRAM USES GV;
    INTEGER ILOOP_1;
    FOR ILOOP_1 = 16381 - 1 TO 0 STEP -1;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $84;
        WAIT IDLE, 1 CYCLES;
        WAIT IDLE, 100 USEC;
        DRSCAN 5, $00,COMPARE $00,$0b,PASS;
        IF PASS THEN ILOOP_1 = 0;
    NEXT ILOOP_1;
ENDPROC;

PROCEDURE PROGRAM_UROW USES GV,BITSTREAM,DO_EXIT,POLL_PROGRAM;
    FOR FROMROWNUMBER = NUMBEROFFROMROWS TO 1 STEP -1;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $9f;
        DRSCAN 3, BOOL((FROMROWNUMBER-1));
        WAIT IDLE, 1 CYCLES;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $9b;
        DRSCAN 128, $ffffffffffffffffffffffffffffffff;
        WAIT IDLE, 5 CYCLES;
        WAIT IDLE, 10000 USEC;
    NEXT FROMROWNUMBER;
    IF ( ! (ISERASEONLY==0) ) THEN GOTO SKIP_CYC_INCREMENT;
    IF ( ! ( (ISPRGARRAY==1)&&(ACT_UROW_CYCLE_COUNT!=1023)) ) THEN GOTO Label_81;
    ACT_UROW_CYCLE_COUNT = (ACT_UROW_CYCLE_COUNT+1);
    Label_81:
    LABEL_SEPARATOR = 0;
    SKIP_CYC_INCREMENT:
    IF ( ! (ISERASEONLY==1) ) THEN GOTO Label_82;
    UROW[] = $ffffffffffffffffffffffffffffffff;
    Label_82:
    IF ( ! ( (ISERASEONLY==0)||(ISRESTOREDESIGN==1)) ) THEN GOTO SKIP_DESIGN_INFO;
    BUFF32[31..0] = BOOL(CHECKSUM);
    IF ( ! ( !ISRESTOREDESIGN) ) THEN GOTO Label_83;
    UROW[127..112] = BUFF32[15..0];
    Label_83:
    IF ( ! ISRESTOREDESIGN ) THEN GOTO Label_84;
    UROW[127..112] = SUROWCHECKSUM[15..0];
    Label_84:
    IF ( ! ( !ISRESTOREDESIGN) ) THEN GOTO Label_85;
    UROW[101..32] = ACT_UROW_DESIGN_NAME[69..0];
    Label_85:
    IF ( ! ISRESTOREDESIGN ) THEN GOTO Label_86;
    UROW[101..32] = SUROWDESIGNNAME[69..0];
    Label_86:
    LABEL_SEPARATOR = 0;
    SKIP_DESIGN_INFO:
    BUFF32[31..0] = BOOL(ACT_UROW_CYCLE_COUNT);
    UROW[111..102] = BUFF32[9..0];
    UROW[31..29] = ACT_UROW_PROG_METHOD[2..0];
    UROW[28..25] = ACT_UROW_ALGO_VERSION[3..0];
    UROW[16..10] = ACT_UROW_SW_VERSION[6..0];
    UROW[9..6] = ACT_UROW_PROGRAM_SW[3..0];
    UROW[4] = SUROW_SRAM_DISTURB[0];
    IF ( ! (ACT_UROW_ALGO_VERSION[6]==1) ) THEN GOTO Label_87;
    UROW[5] = 1;
    UROW[0] = 0;
    UROW[24..23] = ACT_UROW_ALGO_VERSION[5..4];
    Label_87:
    IF ( ! (ACT_UROW_ALGO_VERSION[6]==0) ) THEN GOTO Label_88;
    UROW[5] = 0;
    UROW[0] = 1;
    UROW[24..23] = ACT_UROW_ALGO_VERSION[5..4];
    Label_88:
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $a7;
    DRSCAN 128, UROW[];
    WAIT IDLE, 15 CYCLES;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO PROGRAM_OK3;
    STATUS = -24;
    PRINT "Failed to program UROW";
    UNIQUEEXITCODE = 32853;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    PROGRAM_OK3:
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $c0;
    WAIT IDLE, 1 CYCLES;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $a8;
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 165 USEC;
    DRSCAN 128, $00000000000000000000000000000000,COMPARE UROW[],UROW_MASK[],PASS;
    IF ( ! (PASS==0) ) THEN GOTO UROW_OK;
    STATUS = -24;
    PRINT "Failed to program UROW";
    UNIQUEEXITCODE = 32854;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    UROW_OK:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE FAIL_ERASE USES GV,DO_EXIT;
    STATUS = 8;
    PRINT "Failed Erase Operation";
    UNIQUEEXITCODE = 32855;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
ENDPROC;

PROCEDURE EXE_ERASE USES BITSTREAM,GV,READ_UROW,POLL_ERASE,PROGRAM_UROW,FAIL_ERASE;
    IF ( ! (COMBERASESELECT[14]==1) ) THEN GOTO SKIPRUROW;
    CALL READ_UROW;
    EXPORT "ACTEL_SLOG_UROW", UROW[];
    SKIPRUROW:
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $85;
    DRSCAN 23, COMBERASESELECT[];
    WAIT IDLE, 3 CYCLES;
    CALL POLL_ERASE;
    IF ( ! (PASS==0) ) THEN GOTO ERASEOK;
    CALL FAIL_ERASE;
    ERASEOK:
    IF ( ! (COMBERASESELECT[14]==1) ) THEN GOTO Label_89;
    CALL PROGRAM_UROW;
    Label_89:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_ERASE USES GV,EXE_ERASE;
    PRINT "Erase ...";
    COMBERASESELECT[22..0] = $004000;
    COMBERASESELECT[0] = 1;
    CALL EXE_ERASE;
    PRINT "Completed erase";
ENDPROC;

PROCEDURE DO_ERASE_ARRAY USES GV,EXE_ERASE;
    PRINT "Erase FPGA Array ...";
    COMBERASESELECT[22..0] = $004001;
    CALL EXE_ERASE;
ENDPROC;

PROCEDURE DO_ERASE_ONLY USES GV,DO_ERASE;
    ISERASEONLY = 1;
    CALL DO_ERASE;
ENDPROC;

PROCEDURE DO_ERASE_ARRAY_ONLY USES GV,DO_ERASE_ARRAY;
    ISERASEONLY = 1;
    CALL DO_ERASE_ARRAY;
ENDPROC;

PROCEDURE DO_ERASE_ALL USES GV,EXE_ERASE;
    IF ( ! ( (BM7DEVICE==1)||(BM1DEVICE==1)) ) THEN GOTO Label_90;
    PRINT "Erase FPGA Array and FlashROM ...";
    Label_90:
    IF ( ! ( (BM7DEVICE!=1)&&(BM1DEVICE!=1)) ) THEN GOTO Label_91;
    PRINT "Erase FPGA Array, FlashROM and Security Settings ...";
    Label_91:
    COMBERASESELECT[22..0] = $7fc00f;
    ISERASEONLY = 1;
    CALL EXE_ERASE;
ENDPROC;

PROCEDURE LOAD_ROW_DATA USES BITSTREAM,GV;
    FOR SDTILE = 1 TO NUMBEROFSDTILES;
        FOR I = 1 TO 8;
            IRSTOP IRPAUSE;
            DRSTOP DRPAUSE;
            IRSCAN 8, $89;
            DRSCAN 26, DATASTREAM[(DATAINDEX+25)..DATAINDEX];
            WAIT IDLE, 3 CYCLES;
            DATAINDEX = (DATAINDEX+26);
        NEXT I;
    NEXT SDTILE;
ENDPROC;

PROCEDURE EXE_PROGRAM USES GV,DO_EXIT,POLL_PROGRAM;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $83;
    WAIT IDLE, 3 CYCLES;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO Label_92;
    STATUS = 10;
    PRINT "Failed to program FPGA array at row ",ROWNUMBER,".";
    UNIQUEEXITCODE = 32856;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_92:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE EXE_VERIFY USES GV,DO_EXIT,POLL_PROGRAM;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $8d;
    DRSCAN 2, VERIFYEOL[];
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 132 USEC;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO Label_93;
    STATUS = 11;
    PRINT "Verify 0 failed at row ",ROWNUMBER,".";
    UNIQUEEXITCODE = 32857;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_93:
    IRSCAN 8, $8d;
    DRSCAN 2, VERIFYEOL[],COMPARE $0,$3,PASS;
    IF ( ! (PASS==0) ) THEN GOTO Label_94;
    STATUS = 11;
    PRINT "Verify 0 failed at row ",ROWNUMBER,".";
    UNIQUEEXITCODE = 32858;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_94:
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $8e;
    DRSCAN 2, VERIFYEOL[];
    WAIT IDLE, 3 CYCLES;
    WAIT IDLE, 132 USEC;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO Label_95;
    STATUS = 11;
    PRINT "Verify 1 failed at row ",ROWNUMBER,".";
    UNIQUEEXITCODE = 32859;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_95:
    IRSCAN 8, $8e;
    DRSCAN 2, VERIFYEOL[],COMPARE $0,$3,PASS;
    IF ( ! (PASS==0) ) THEN GOTO Label_96;
    STATUS = 11;
    PRINT "Verify 1 failed at row ",ROWNUMBER,".";
    UNIQUEEXITCODE = 32860;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_96:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_PROGRAM USES GV,LOAD_ROW_DATA,EXE_PROGRAM;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $87;
    DRSCAN 2, $2;
    WAIT IDLE, 3 CYCLES;
    PRINT "Programming FPGA Array";
    DATAINDEX = 0;
    ROWNUMBER = (NUMBEROFMAPROWS-1);
    INTEGER IREPEAT_0;
    FOR IREPEAT_0 = NUMBEROFMAPROWS - 1 TO 0 STEP -1;
        CALL LOAD_ROW_DATA;
        CALL EXE_PROGRAM;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $87;
        DRSCAN 2, $3;
        WAIT IDLE, 3 CYCLES;
        IF ( ! ((ROWNUMBER%ROWITERATION)==0) ) THEN GOTO Label_97;
        PERCENT_UPDATE = ((100*((NUMBEROFMAPROWS-ROWNUMBER)+1))/NUMBEROFMAPROWS);
        DIFFERENCE = (PERCENT_UPDATE%10);
        IF ( ! (DIFFERENCE>=5) ) THEN GOTO ROUND_DOWN_PGM_A;
        PERCENT_UPDATE = (PERCENT_UPDATE+(10-DIFFERENCE));
        ROUND_DOWN_PGM_A:
        IF ( ! (DIFFERENCE<5) ) THEN GOTO ROUND_UP_PGM_A;
        PERCENT_UPDATE = (PERCENT_UPDATE-DIFFERENCE);
        ROUND_UP_PGM_A:
        EXPORT "PERCENT_DONE", PERCENT_UPDATE;
        Label_97:
        ROWNUMBER = (ROWNUMBER-1);
    NEXT IREPEAT_0;
ENDPROC;

PROCEDURE DO_VERIFY USES GV,LOAD_ROW_DATA,EXE_VERIFY;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $87;
    DRSCAN 2, $2;
    WAIT IDLE, 3 CYCLES;
    PRINT "Verifying FPGA Array";
    DATAINDEX = 0;
    ROWNUMBER = (NUMBEROFMAPROWS-1);
    INTEGER IREPEAT_1;
    FOR IREPEAT_1 = NUMBEROFMAPROWS - 1 TO 0 STEP -1;
        CALL LOAD_ROW_DATA;
        CALL EXE_VERIFY;
        IRSTOP IRPAUSE;
        DRSTOP DRPAUSE;
        IRSCAN 8, $87;
        DRSCAN 2, $3;
        WAIT IDLE, 3 CYCLES;
        IF ( ! ((ROWNUMBER%ROWITERATION)==0) ) THEN GOTO Label_98;
        PERCENT_UPDATE = ((100*((NUMBEROFMAPROWS-ROWNUMBER)+1))/NUMBEROFMAPROWS);
        DIFFERENCE = (PERCENT_UPDATE%10);
        IF ( ! (DIFFERENCE>=5) ) THEN GOTO ROUND_DOWN_VER_ARRAY;
        PERCENT_UPDATE = (PERCENT_UPDATE+(10-DIFFERENCE));
        ROUND_DOWN_VER_ARRAY:
        IF ( ! (DIFFERENCE<5) ) THEN GOTO ROUND_UP_VER_ARRAY;
        PERCENT_UPDATE = (PERCENT_UPDATE-DIFFERENCE);
        ROUND_UP_VER_ARRAY:
        EXPORT "PERCENT_DONE", PERCENT_UPDATE;
        Label_98:
        ROWNUMBER = (ROWNUMBER-1);
    NEXT IREPEAT_1;
    PRINT "        Verifying FPGA Array -- pass";
ENDPROC;

PROCEDURE DO_VERIFY_BOL USES GV,DO_VERIFY;
    VERIFYEOL[0] = 0;
    CALL DO_VERIFY;
ENDPROC;

PROCEDURE DO_VERIFY_EOL USES GV,DO_VERIFY;
    VERIFYEOL[0] = 1;
    CALL DO_VERIFY;
ENDPROC;

PROCEDURE DO_PROGRAM_RLOCK USES GV,DO_EXIT,POLL_PROGRAM;
    DATAINDEX = 0;
    INTEGER IREPEAT_2;
    FOR IREPEAT_2 = NUMBEROFSDTILES - 1 TO 0 STEP -1;
        FOR I = 1 TO 8;
            IRSTOP IRPAUSE;
            DRSTOP DRPAUSE;
            IRSCAN 8, $89;
            DRSCAN 26, RLOCK[(DATAINDEX+25)..DATAINDEX];
            WAIT IDLE, 3 CYCLES;
            DATAINDEX = (DATAINDEX+26);
        NEXT I;
    NEXT IREPEAT_2;
    IRSTOP IRPAUSE;
    DRSTOP DRPAUSE;
    IRSCAN 8, $8c;
    WAIT IDLE, 3 CYCLES;
    CALL POLL_PROGRAM;
    IF ( ! (PASS==0) ) THEN GOTO Label_99;
    STATUS = 10;
    PRINT "Failed to enable FPGA Array.";
    UNIQUEEXITCODE = 32862;
    BUFF128[15..0] = BOOL(UNIQUEEXITCODE);
    EXPORT "ERROR_CODE", BUFF128[15..0];
    CALL DO_EXIT;
    Label_99:
    LABEL_SEPARATOR = 0;
ENDPROC;

PROCEDURE DO_READ_IDCODE USES READ_IDCODE_ONLY;
    WAIT RESET, 5 CYCLES;
    CALL READ_IDCODE_ONLY;
    EXIT 0;
ENDPROC;


CRC F7D8;
